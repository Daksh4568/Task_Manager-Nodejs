const jwt = require('jsonwebtoken') const User = require('../models/user.model') const {ObjectId} = require('mongodb') const mongoose = require('mongoose')  const auth = async(req , res , next) =>{    try{ //const decoded = jwt.verify(token , 'hisismynewcode') // This line verifies the JWT using the jwt.verify function. // token is the JWT extracted from the request header. // 'thisismynewcode' is the secret key that was used to sign the token originally. It must match the key used when the token was created. // If the token is valid, jwt.verify decodes the token and returns the decoded payload (typically containing user information like the user ID). If the token is invalid, this line will throw an error, which is caught by the catch block.      const token = req.header('Authorization').replace('Bearer ' , '')      console.log('Token:' , token)      const decoded = jwt.verify(token , 'thisismynewcode')      console.log('Decode JWT:' , decoded)       const user = await User.findOne({_id: new mongoose.Types.ObjectId(decoded._id) , 'tokens.token':token} )      console.log('User:' , user)      if(!user){         throw new Error('User not found')      }           req.user = user      next() // Call next() to proceed to the next middleware/route handler    } catch(e){     res.status(401).send({error : "Please authenticate."})     console.log('Error: ' , e)    } } module.exports = auth